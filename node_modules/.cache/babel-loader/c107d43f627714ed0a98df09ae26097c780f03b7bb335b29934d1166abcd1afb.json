{"ast":null,"code":"var _jsxFileName = \"D:\\\\Anjali\\\\Spotify-Clone\\\\spotify-clone\\\\src\\\\context\\\\PlayerContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useRef, useState } from \"react\";\nimport { songsData } from \"../assets/assets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlayerContext = /*#__PURE__*/createContext();\nconst PlayerContextProvider = props => {\n  _s();\n  const audioRef = useRef();\n  const seekBg = useRef();\n  const seekBar = useRef();\n  const [track, setTrack] = useState(songsData[0]);\n  const [playStatus, setPlayStatus] = useState(false);\n  const [time, setTime] = useState({\n    currentTime: {\n      second: 0,\n      minute: 0\n    },\n    totalTime: {\n      second: 0,\n      minute: 0\n    }\n  });\n  const play = () => {};\n  const contextValue = {\n    audioRef,\n    seekBg,\n    seekBar,\n    track,\n    setTrack,\n    playStatus,\n    setPlayStatus,\n    time,\n    setTime\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerContextProvider, \"Lq04a7ajWd1IA0BFY0PsZahcVrI=\");\n_c = PlayerContextProvider;\nexport default PlayerContextProvider;\nvar _c;\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"names":["createContext","useRef","useState","songsData","jsxDEV","_jsxDEV","PlayerContext","PlayerContextProvider","props","_s","audioRef","seekBg","seekBar","track","setTrack","playStatus","setPlayStatus","time","setTime","currentTime","second","minute","totalTime","play","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Anjali/Spotify-Clone/spotify-clone/src/context/PlayerContext.jsx"],"sourcesContent":["import { createContext, useRef, useState } from \"react\";\r\nimport { songsData } from \"../assets/assets\";\r\n\r\nexport const PlayerContext = createContext();\r\n\r\nconst PlayerContextProvider = (props) => {\r\n\r\n    const audioRef = useRef();\r\n    const seekBg = useRef();\r\n    const seekBar = useRef();\r\n\r\n    const [track,setTrack] = useState(songsData[0]);\r\n    const [playStatus,setPlayStatus] = useState(false);\r\n    const [time,setTime] = useState({\r\n        currentTime: {\r\n            second:0,\r\n            minute:0\r\n        },\r\n        totalTime: {\r\n            second:0,\r\n            minute:0\r\n        }\r\n    })\r\n     \r\n    const play = () => {\r\n        \r\n    }\r\n\r\n    const contextValue = {\r\n       audioRef,\r\n       seekBg,\r\n       seekBar,\r\n       track,setTrack,\r\n       playStatus,setPlayStatus,\r\n       time,setTime\r\n    }\r\n\r\n  return(\r\n    <PlayerContext.Provider value={contextValue} >\r\n      {props.children}\r\n    </PlayerContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nexport default PlayerContextProvider;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;AAE5C,MAAMO,qBAAqB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAErC,MAAMC,QAAQ,GAAGT,MAAM,CAAC,CAAC;EACzB,MAAMU,MAAM,GAAGV,MAAM,CAAC,CAAC;EACvB,MAAMW,OAAO,GAAGX,MAAM,CAAC,CAAC;EAExB,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAGZ,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACY,UAAU,EAACC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAClD,MAAM,CAACe,IAAI,EAACC,OAAO,CAAC,GAAGhB,QAAQ,CAAC;IAC5BiB,WAAW,EAAE;MACTC,MAAM,EAAC,CAAC;MACRC,MAAM,EAAC;IACX,CAAC;IACDC,SAAS,EAAE;MACPF,MAAM,EAAC,CAAC;MACRC,MAAM,EAAC;IACX;EACJ,CAAC,CAAC;EAEF,MAAME,IAAI,GAAGA,CAAA,KAAM,CAEnB,CAAC;EAED,MAAMC,YAAY,GAAG;IAClBd,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPC,KAAK;IAACC,QAAQ;IACdC,UAAU;IAACC,aAAa;IACxBC,IAAI;IAACC;EACR,CAAC;EAEH,oBACEb,OAAA,CAACC,aAAa,CAACmB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACzCnB,KAAK,CAACmB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAG7B,CAAC;AAAAtB,EAAA,CAtCKF,qBAAqB;AAAAyB,EAAA,GAArBzB,qBAAqB;AAwC3B,eAAeA,qBAAqB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}