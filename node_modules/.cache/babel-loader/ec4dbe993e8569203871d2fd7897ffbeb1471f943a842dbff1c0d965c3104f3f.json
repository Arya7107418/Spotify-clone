{"ast":null,"code":"import{createContext,useEffect,useRef,useState}from\"react\";import{songsData}from'../assets/assets';import{jsx as _jsx}from\"react/jsx-runtime\";export const PlayerContext=/*#__PURE__*/createContext();const PlayerContextProvider=props=>{const audioRef=useRef();const seekBg=useRef();const seekBar=useRef();const[track,setTrack]=useState(songsData[0]);const[playStatus,setPlayStatus]=useState(false);const[time,setTime]=useState({currentTime:{second:0,minute:0},totalTime:{second:0,minute:0}});const play=()=>{audioRef.current.play();setPlayStatus(true);};const pause=()=>{audioRef.current.pause();setPlayStatus(false);};const playWithId=async id=>{await setTrack(songsData[id]);await audioRef.current.play();setPlayStatus(true);};const previous=async id=>{if(track.id>0){await setTrack(songsData[track.id-1]);await audioRef.current.play();setPlayStatus(true);}};const next=async id=>{if(track.id<songsData.length-1){await setTrack(songsData[track.id+1]);await audioRef.current.play();setPlayStatus(true);}};const seekSong=async e=>{audioRef.current.currentTime=e.nativeEvent.offsetX/seekBg.current.offsetWidth*audioRef.current.duration;};// Use effect to update time\nuseEffect(()=>{const updateTime=()=>{if(audioRef.current){const currentTime=audioRef.current.currentTime;const duration=audioRef.current.duration;// Set the width of the seek bar as a percentage of the total duration\nconst seekBarWidth=currentTime/duration*100;seekBar.current.style.width=`${seekBarWidth}%`;setTime({currentTime:{second:Math.floor(currentTime%60),minute:Math.floor(currentTime/60)},totalTime:{second:Math.floor(duration%60),minute:Math.floor(duration/60)}});}};const intervalId=setInterval(updateTime,1000);return()=>clearInterval(intervalId);},[audioRef]);const contextValue={audioRef,seekBg,seekBar,track,setTrack,playStatus,setPlayStatus,time,setTime,play,pause,playWithId,previous,next,seekSong};return/*#__PURE__*/_jsx(PlayerContext.Provider,{value:contextValue,children:props.children});};export default PlayerContextProvider;","map":{"version":3,"names":["createContext","useEffect","useRef","useState","songsData","jsx","_jsx","PlayerContext","PlayerContextProvider","props","audioRef","seekBg","seekBar","track","setTrack","playStatus","setPlayStatus","time","setTime","currentTime","second","minute","totalTime","play","current","pause","playWithId","id","previous","next","length","seekSong","e","nativeEvent","offsetX","offsetWidth","duration","updateTime","seekBarWidth","style","width","Math","floor","intervalId","setInterval","clearInterval","contextValue","Provider","value","children"],"sources":["D:/Anjali/Spotify-Clone/spotify-clone/src/context/PlayerContext.jsx"],"sourcesContent":["import { createContext, useEffect, useRef, useState } from \"react\";\r\nimport { songsData } from '../assets/assets'\r\n\r\nexport const PlayerContext = createContext();\r\n\r\nconst PlayerContextProvider = (props) => {\r\n    const audioRef = useRef();\r\n    const seekBg = useRef();\r\n    const seekBar = useRef();\r\n    \r\n    const [track, setTrack] = useState(songsData[0]);\r\n    const [playStatus, setPlayStatus] = useState(false);\r\n    const [time, setTime] = useState({\r\n        currentTime: { second: 0, minute: 0 },\r\n        totalTime: { second: 0, minute: 0 }\r\n    });\r\n    \r\n    const play = () => {\r\n        audioRef.current.play();\r\n        setPlayStatus(true);\r\n    }\r\n\r\n    const pause = () => {\r\n        audioRef.current.pause();\r\n        setPlayStatus(false);\r\n    }\r\n\r\n    const playWithId = async (id) => {\r\n      await setTrack(songsData[id]);\r\n      await audioRef.current.play();\r\n      setPlayStatus(true);\r\n    }\r\n\r\n    const previous = async (id) => {\r\n        if (track.id>0) {\r\n            await setTrack(songsData[track.id-1]);\r\n            await audioRef.current.play();\r\n            setPlayStatus(true);\r\n        }\r\n    }\r\n\r\n    const next = async (id) => {\r\n        if (track.id<songsData.length-1) {\r\n            await setTrack(songsData[track.id+1]);\r\n            await audioRef.current.play();\r\n            setPlayStatus(true);\r\n        }\r\n    }\r\n\r\n    const seekSong = async (e) => {\r\n        audioRef.current.currentTime = ((e.nativeEvent.offsetX/ seekBg.current.offsetWidth)*audioRef.current.duration)\r\n    }\r\n\r\n    // Use effect to update time\r\n    useEffect(() => {\r\n        const updateTime = () => {\r\n            if (audioRef.current) {\r\n                const currentTime = audioRef.current.currentTime;\r\n                const duration = audioRef.current.duration;\r\n\r\n                // Set the width of the seek bar as a percentage of the total duration\r\n                const seekBarWidth = (currentTime / duration) * 100;\r\n                seekBar.current.style.width = `${seekBarWidth}%`;\r\n\r\n                setTime({\r\n                    currentTime: {\r\n                        second: Math.floor(currentTime % 60),\r\n                        minute: Math.floor(currentTime / 60),\r\n                    },\r\n                    totalTime: {\r\n                        second: Math.floor(duration % 60),\r\n                        minute: Math.floor(duration / 60),\r\n                    },\r\n                });\r\n            }\r\n        };\r\n\r\n        const intervalId = setInterval(updateTime, 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [audioRef]);\r\n\r\n    const contextValue = {\r\n        audioRef,\r\n        seekBg,\r\n        seekBar,\r\n        track,setTrack,\r\n        playStatus,setPlayStatus,\r\n        time,setTime,\r\n        play,pause,\r\n        playWithId,\r\n        previous,next,\r\n        seekSong\r\n    };\r\n\r\n    return (\r\n        <PlayerContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </PlayerContext.Provider>\r\n    );\r\n};\r\n\r\nexport default PlayerContextProvider;\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAClE,OAASC,SAAS,KAAQ,kBAAkB,QAAAC,GAAA,IAAAC,IAAA,yBAE5C,MAAO,MAAM,CAAAC,aAAa,cAAGP,aAAa,CAAC,CAAC,CAE5C,KAAM,CAAAQ,qBAAqB,CAAIC,KAAK,EAAK,CACrC,KAAM,CAAAC,QAAQ,CAAGR,MAAM,CAAC,CAAC,CACzB,KAAM,CAAAS,MAAM,CAAGT,MAAM,CAAC,CAAC,CACvB,KAAM,CAAAU,OAAO,CAAGV,MAAM,CAAC,CAAC,CAExB,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAChD,KAAM,CAACW,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACc,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,CAC7BgB,WAAW,CAAE,CAAEC,MAAM,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAC,CACrCC,SAAS,CAAE,CAAEF,MAAM,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CACtC,CAAC,CAAC,CAEF,KAAM,CAAAE,IAAI,CAAGA,CAAA,GAAM,CACfb,QAAQ,CAACc,OAAO,CAACD,IAAI,CAAC,CAAC,CACvBP,aAAa,CAAC,IAAI,CAAC,CACvB,CAAC,CAED,KAAM,CAAAS,KAAK,CAAGA,CAAA,GAAM,CAChBf,QAAQ,CAACc,OAAO,CAACC,KAAK,CAAC,CAAC,CACxBT,aAAa,CAAC,KAAK,CAAC,CACxB,CAAC,CAED,KAAM,CAAAU,UAAU,CAAG,KAAO,CAAAC,EAAE,EAAK,CAC/B,KAAM,CAAAb,QAAQ,CAACV,SAAS,CAACuB,EAAE,CAAC,CAAC,CAC7B,KAAM,CAAAjB,QAAQ,CAACc,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BP,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,KAAM,CAAAY,QAAQ,CAAG,KAAO,CAAAD,EAAE,EAAK,CAC3B,GAAId,KAAK,CAACc,EAAE,CAAC,CAAC,CAAE,CACZ,KAAM,CAAAb,QAAQ,CAACV,SAAS,CAACS,KAAK,CAACc,EAAE,CAAC,CAAC,CAAC,CAAC,CACrC,KAAM,CAAAjB,QAAQ,CAACc,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BP,aAAa,CAAC,IAAI,CAAC,CACvB,CACJ,CAAC,CAED,KAAM,CAAAa,IAAI,CAAG,KAAO,CAAAF,EAAE,EAAK,CACvB,GAAId,KAAK,CAACc,EAAE,CAACvB,SAAS,CAAC0B,MAAM,CAAC,CAAC,CAAE,CAC7B,KAAM,CAAAhB,QAAQ,CAACV,SAAS,CAACS,KAAK,CAACc,EAAE,CAAC,CAAC,CAAC,CAAC,CACrC,KAAM,CAAAjB,QAAQ,CAACc,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BP,aAAa,CAAC,IAAI,CAAC,CACvB,CACJ,CAAC,CAED,KAAM,CAAAe,QAAQ,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC1BtB,QAAQ,CAACc,OAAO,CAACL,WAAW,CAAKa,CAAC,CAACC,WAAW,CAACC,OAAO,CAAEvB,MAAM,CAACa,OAAO,CAACW,WAAW,CAAEzB,QAAQ,CAACc,OAAO,CAACY,QAAS,CAClH,CAAC,CAED;AACAnC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAoC,UAAU,CAAGA,CAAA,GAAM,CACrB,GAAI3B,QAAQ,CAACc,OAAO,CAAE,CAClB,KAAM,CAAAL,WAAW,CAAGT,QAAQ,CAACc,OAAO,CAACL,WAAW,CAChD,KAAM,CAAAiB,QAAQ,CAAG1B,QAAQ,CAACc,OAAO,CAACY,QAAQ,CAE1C;AACA,KAAM,CAAAE,YAAY,CAAInB,WAAW,CAAGiB,QAAQ,CAAI,GAAG,CACnDxB,OAAO,CAACY,OAAO,CAACe,KAAK,CAACC,KAAK,CAAG,GAAGF,YAAY,GAAG,CAEhDpB,OAAO,CAAC,CACJC,WAAW,CAAE,CACTC,MAAM,CAAEqB,IAAI,CAACC,KAAK,CAACvB,WAAW,CAAG,EAAE,CAAC,CACpCE,MAAM,CAAEoB,IAAI,CAACC,KAAK,CAACvB,WAAW,CAAG,EAAE,CACvC,CAAC,CACDG,SAAS,CAAE,CACPF,MAAM,CAAEqB,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAG,EAAE,CAAC,CACjCf,MAAM,CAAEoB,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAG,EAAE,CACpC,CACJ,CAAC,CAAC,CACN,CACJ,CAAC,CAED,KAAM,CAAAO,UAAU,CAAGC,WAAW,CAACP,UAAU,CAAE,IAAI,CAAC,CAChD,MAAO,IAAMQ,aAAa,CAACF,UAAU,CAAC,CAC1C,CAAC,CAAE,CAACjC,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAoC,YAAY,CAAG,CACjBpC,QAAQ,CACRC,MAAM,CACNC,OAAO,CACPC,KAAK,CAACC,QAAQ,CACdC,UAAU,CAACC,aAAa,CACxBC,IAAI,CAACC,OAAO,CACZK,IAAI,CAACE,KAAK,CACVC,UAAU,CACVE,QAAQ,CAACC,IAAI,CACbE,QACJ,CAAC,CAED,mBACIzB,IAAA,CAACC,aAAa,CAACwC,QAAQ,EAACC,KAAK,CAAEF,YAAa,CAAAG,QAAA,CACvCxC,KAAK,CAACwC,QAAQ,CACK,CAAC,CAEjC,CAAC,CAED,cAAe,CAAAzC,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}